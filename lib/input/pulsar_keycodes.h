#pragma once

#include <stdint.h>


namespace pulsar
{
	const uint16_t KEYCODES_COUNT = 256u;
	using keycode = uint16_t;

	// keycode-enums were constructed manually, may be errors
	// keycodes: https://download.microsoft.com/download/1/6/1/161ba512-40e2-4cc9-843a-923143f3456c/translate.pdf
	enum KEYCODES : keycode
	{
		KEY_A = 0x1E,
		KEY_B = 0x30,
		KEY_C = 0x2E,
		KEY_D = 0x20,
		KEY_E = 0x12,
		KEY_F = 0x21,
		KEY_G = 0x22,
		KEY_H = 0x23,
		KEY_I = 0x17,
		KEY_J = 0x24,
		KEY_K = 0x25,
		KEY_L = 0x26,
		KEY_M = 0x32,
		KEY_N = 0x31,
		KEY_O = 0x18,
		KEY_P = 0x19,
		KEY_Q = 0x10,
		KEY_R = 0x13,
		KEY_S = 0x1F,
		KEY_T = 0x14,
		KEY_U = 0x16,
		KEY_V = 0x2F,
		KEY_W = 0x11,
		KEY_X = 0x2D,
		KEY_Y = 0x15,
		KEY_Z = 0x2C,

		KEY_1 = 0x02,
		KEY_2 = 0x03,
		KEY_3 = 0x04,
		KEY_4 = 0x05,
		KEY_5 = 0x06,
		KEY_6 = 0x07,
		KEY_7 = 0x08,
		KEY_8 = 0x09,
		KEY_9 = 0xA0,
		KEY_0 = 0xB0,

		KEY_ENTER = 0x1C,
		KEY_ESCAPE = 0x01,
		KEY_BACKSPACE = 0x0E,
		KEY_TAB = 0x0F,
		KEY_SPACE = 0x39,

		KEY_MINUS = 0x0C,
		KEY_UNDERSCORE = KEY_MINUS,
		KEY_PLUS = 0x0D,
		KEY_EQUAL = KEY_PLUS,
		KEY_LEFT_BRACKET = 0x1A,
		KEY_LEFT_BRACE = KEY_LEFT_BRACKET,
		KEY_RIGHT_BRACKET = 0x1B,
		KEY_RIGHT_BRACE = KEY_RIGHT_BRACKET,
		KEY_BACKSLASH = 0x2B,
		KEY_SLASH = KEY_BACKSLASH,
		KEY_SEMICOLON = 0x27,
		KEY_COLON = KEY_SEMICOLON,
		KEY_QUOTE = 0x28,
		KEY_DOUBLE_QUOTE = KEY_QUOTE,
		KEY_GRAVE_ACCENT = 0x29,
		KEY_TILDE = KEY_GRAVE_ACCENT,
		KEY_COMMA = 0x33,
		KEY_LESS = KEY_COMMA,
		KEY_DOT = 0x34,
		KEY_GREATER = KEY_DOT,
		KEY_FORWARD_SLASH = 0x35,
		KEY_QUESTION = KEY_FORWARD_SLASH,

		KEY_CAPS_LOCK = 0x3A,

		KEY_F1 = 0x3B,
		KEY_F2 = 0x3C,
		KEY_F3 = 0x3D,
		KEY_F4 = 0x3E,
		KEY_F5 = 0x3F,
		KEY_F6 = 0x40,
		KEY_F7 = 0x41,
		KEY_F8 = 0x42,
		KEY_F9 = 0x43,
		KEY_F10 = 0x44,
		KEY_F11 = 0x57,
		KEY_F12 = 0x58,

		KEY_PRINT_SCREEN = 0xE037,
		KEY_SCROLL_LOCK = 0xE046,
		KEY_INSERT = 0xE052,
		KEY_HOME = 0xE047,
		KEY_PAGE_UP = 0xE049,
		KEY_DELETE = 0xE053,
		KEY_END = 0xE04F,
		KEY_PAGE_DOWN = 0xE051,

		KEY_RIGHT_ARROW = 0xE04D,
		KEY_LEFT_ARROW = 0xE04B,
		KEY_DOWN_ARROW = 0xE050,
		KEY_UP_ARROW = 0xE048,

		KEY_NUM_LOCK = 0x45,
		KEY_NUM_FORWARD_SLASH = 0xE035,
		KEY_NUM_ASTERISK = 0x37,
		KEY_NUM_MINUS = 0x4A,
		KEY_NUM_PLUS = 0x4E,
		KEY_NUM_ENTER = 0xE01C,
		KEY_NUM_1 = 0x4F,
		KEY_NUM_2 = 0x50,
		KEY_NUM_3 = 0x51,
		KEY_NUM_4 = 0x4B,
		KEY_NUM_5 = 0x4C,
		KEY_NUM_6 = 0x4D,
		KEY_NUM_7 = 0x47,
		KEY_NUM_8 = 0x48,
		KEY_NUM_9 = 0x49,
		KEY_NUM_0 = 0x52,
		KEY_NUM_DOT = 0x53,

		KEY_LCTRL = 0x1D,
		KEY_LSHIFT = 0x2A,
		KEY_LALT = 0x38,
		KEY_RCTRL = 0xE01D,
		KEY_RSHIFT = 0x36,
		KEY_RALT = 0xE038
	};

	// TODO: probably, there is no need of break-codes, because input api generates make-codes even when flag is RI_KEY_BREAK
	// weird, need to figure this out, maybe I have misunderstood the documentation
	enum BREAK_KEYCODES : keycode
	{
		BREAK_KEY_A = 0x9E,
		BREAK_KEY_B = 0xB0,
		BREAK_KEY_C = 0xAE,
		BREAK_KEY_D = 0xA0,
		BREAK_KEY_E = 0x92,
		BREAK_KEY_F = 0xA1,
		BREAK_KEY_G = 0xA2,
		BREAK_KEY_H = 0xA3,
		BREAK_KEY_I = 0x97,
		BREAK_KEY_J = 0xA4,
		BREAK_KEY_K = 0xA5,
		BREAK_KEY_L = 0xA6,
		BREAK_KEY_M = 0xB2,
		BREAK_KEY_N = 0xB1,
		BREAK_KEY_O = 0x98,
		BREAK_KEY_P = 0x99,
		BREAK_KEY_Q = 0x90,
		BREAK_KEY_R = 0x93,
		BREAK_KEY_S = 0x9F,
		BREAK_KEY_T = 0x94,
		BREAK_KEY_U = 0x96,
		BREAK_KEY_V = 0xAF,
		BREAK_KEY_W = 0x91,
		BREAK_KEY_X = 0xAD,
		BREAK_KEY_Y = 0x95,
		BREAK_KEY_Z = 0xAC,

		BREAK_KEY_1 = 0x82,
		BREAK_KEY_2 = 0x83,
		BREAK_KEY_3 = 0x84,
		BREAK_KEY_4 = 0x85,
		BREAK_KEY_5 = 0x86,
		BREAK_KEY_6 = 0x87,
		BREAK_KEY_7 = 0x88,
		BREAK_KEY_8 = 0x89,
		BREAK_KEY_9 = 0x8A,
		BREAK_KEY_0 = 0x8B,

		BREAK_KEY_ENTER = 0x9C,
		BREAK_KEY_ESCAPE = 0x81,
		BREAK_KEY_BACKSPACE = 0x8E,
		BREAK_KEY_TAB = 0x8F,
		BREAK_KEY_SPACE = 0xB9,

		BREAK_KEY_MINUS = 0x8C,
		BREAK_KEY_UNDERSCORE = BREAK_KEY_MINUS,
		BREAK_KEY_PLUS = 0x8D,
		BREAK_KEY_EQUAL = BREAK_KEY_PLUS,
		BREAK_KEY_LEFT_BRACKET = 0x9A,
		BREAK_KEY_LEFT_BRACE = BREAK_KEY_LEFT_BRACKET,
		BREAK_KEY_RIGHT_BRACKET = 0x9B,
		BREAK_KEY_RIGHT_BRACE = BREAK_KEY_RIGHT_BRACKET,
		BREAK_KEY_BACKSLASH = 0xAB,
		BREAK_KEY_SLASH = BREAK_KEY_BACKSLASH,
		BREAK_KEY_SEMICOLON = 0xA7,
		BREAK_KEY_COLON = BREAK_KEY_SEMICOLON,
		BREAK_KEY_QUOTE = 0xA8,
		BREAK_KEY_DOUBLE_QUOTE = BREAK_KEY_QUOTE,
		BREAK_KEY_GRAVE_ACCENT = 0xA9,
		BREAK_KEY_TILDE = BREAK_KEY_GRAVE_ACCENT,
		BREAK_KEY_COMMA = 0xB3,
		BREAK_KEY_LESS = BREAK_KEY_COMMA,
		BREAK_KEY_DOT = 0xB4,
		BREAK_KEY_GREATER = BREAK_KEY_DOT,
		BREAK_KEY_FORWARD_SLASH = 0xB5,
		BREAK_KEY_QUESTION = BREAK_KEY_FORWARD_SLASH,

		BREAK_KEY_CAPS_LOCK = 0xBA,

		BREAK_KEY_F1 = 0xBB,
		BREAK_KEY_F2 = 0xBC,
		BREAK_KEY_F3 = 0xBD,
		BREAK_KEY_F4 = 0xBE,
		BREAK_KEY_F5 = 0xBF,
		BREAK_KEY_F6 = 0xC0,
		BREAK_KEY_F7 = 0xC1,
		BREAK_KEY_F8 = 0xC2,
		BREAK_KEY_F9 = 0xC3,
		BREAK_KEY_F10 = 0xC4,
		BREAK_KEY_F11 = 0xD7,
		BREAK_KEY_F12 = 0xD8,

		BREAK_KEY_PRINT_SCREEN = 0xE0B7,
		BREAK_KEY_SCROLL_LOCK = 0xE0C6,
		BREAK_KEY_INSERT = 0xE0D2,
		BREAK_KEY_HOME = 0xE0C7,
		BREAK_KEY_PAGE_UP = 0xE0C9,
		BREAK_KEY_DELETE = 0xE0D3,
		BREAK_KEY_END = 0xE0CF,
		BREAK_KEY_PAGE_DOWN = 0xE0D1,

		BREAK_KEY_RIGHT_ARROW = 0xE0CD,
		BREAK_KEY_LEFT_ARROW = 0xE0CB,
		BREAK_KEY_DOWN_ARROW = 0xE0D0,
		BREAK_KEY_UP_ARROW = 0xE0C8,

		BREAK_KEY_NUM_LOCK = 0xC5,
		BREAK_KEY_NUM_FORWARD_SLASH = 0xE0B5,
		BREAK_KEY_NUM_ASTERISK = 0xB7,
		BREAK_KEY_NUM_MINUS = 0xCA,
		BREAK_KEY_NUM_PLUS = 0xCE,
		BREAK_KEY_NUM_ENTER = 0xE09C,
		BREAK_KEY_NUM_1 = 0xCF,
		BREAK_KEY_NUM_2 = 0xD0,
		BREAK_KEY_NUM_3 = 0xD1,
		BREAK_KEY_NUM_4 = 0xCB,
		BREAK_KEY_NUM_5 = 0xCC,
		BREAK_KEY_NUM_6 = 0xCD,
		BREAK_KEY_NUM_7 = 0xC7,
		BREAK_KEY_NUM_8 = 0xC8,
		BREAK_KEY_NUM_9 = 0xC9,
		BREAK_KEY_NUM_0 = 0xD2,
		BREAK_KEY_NUM_DOT = 0xD3,

		BREAK_KEY_LCTRL = 0x9D,
		BREAK_KEY_LSHIFT = 0xAA,
		BREAK_KEY_LALT = 0xB8,
		BREAK_KEY_RCTRL = 0xE09D,
		BREAK_KEY_RSHIFT = 0xB6,
		BREAK_KEY_RALT = 0xE0B8
	};
}

